package com.cgzz.mapbox.test;

import com.cgzz.mapbox.jturf.shape.impl.Feature;
import com.cgzz.mapbox.jturf.shape.impl.Point;
import com.cgzz.mapbox.jturf.shape.impl.Polygon;
import com.cgzz.mapbox.test.model.PolygonMergeInformation;
import com.cgzz.mapbox.test.utils.JTurfTools;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;

public class JTurfToolsTest {

    public static void main(String[] args) {
        testRepairPoints();
        // testMergePoints();
    }

    /**
     * 测试修复多片不交集多边形的功能
     */
    private static void testRepairPoints() {
        double[][] ps = new double[][]{{114.35491180419922, 30.53430938720703}, {114.3525161743164, 30.535009384155273}, {114.34822082519531, 30.53636932373047}, {114.34331512451172, 30.537948608398438}, {114.34156799316406, 30.538618087768555}, {114.34353637695312, 30.541173934936523}, {114.34574890136719, 30.543569564819336}, {114.34818267822266, 30.545791625976562}, {114.350830078125, 30.54783058166504}, {114.35366821289062, 30.549671173095703}, {114.356689453125, 30.551301956176758}, {114.35987854003906, 30.552711486816406}, {114.36322021484375, 30.553884506225586}, {114.36201477050781, 30.552345275878906}, {114.3602523803711, 30.552377700805664}, {114.36007690429688, 30.55007553100586}, {114.36083221435547, 30.545129776000977}, {114.36302185058594, 30.541770935058594}, {114.36255645751953, 30.54037094116211}, {114.35883331298828, 30.541942596435547}, {114.3584976196289, 30.539920806884766}, {114.35587310791016, 30.53937530517578}, {114.35491180419922, 30.53430938720703}, {114.3751220703125, 30.555755615234375}, {114.3735122680664, 30.555835723876953}, {114.37511444091797, 30.555932998657227}, {114.3751220703125, 30.555755615234375}, {114.35491180419922, 30.53430938720703}};

        List<Point> pointList = new ArrayList<>();
        for (double[] p : ps) {
            pointList.add(Point.fromLngLat(p));
        }

        Polygon polygon = JTurfTools.repairCoords(pointList);

        StringBuilder buf = new StringBuilder();
        buf.append("[");
        for (Point point : polygon.coordinates().get(0)) {
            buf.append("{\"lng\":").append(point.longitude()).append(",\"lat\":").append(point.latitude()).append("}").append(",");
        }
        buf.delete(buf.length() - 1, buf.length());
        buf.append("]");
        System.out.println("point size = " + polygon.coordinates().get(0).size());
        System.out.println(buf.toString());
    }

    private static void testMergePoints() {
        Point centerPoint = Point.fromLngLat(116.4220300, 39.9243400);
        int radius = 5000;

        Polygon currPolygon = Polygon.fromLngLats(new double[][]{{116.39685,39.933025},{116.397194,39.93041},{116.39607,39.929363},{116.396065,39.928795},{116.39592,39.92876},{116.395935,39.92861},{116.394775,39.928764},{116.394356,39.928764},{116.39359,39.92592},{116.39364,39.92408},{116.39435,39.91914},{116.392845,39.916203},{116.3925,39.913532},{116.3983,39.913757},{116.405815,39.914047},{116.405945,39.91094},{116.40608,39.906586},{116.4102,39.907146},{116.42603,39.90739},{116.42646,39.90763},{116.42738,39.907677},{116.42896,39.90804},{116.43027,39.90828},{116.43811,39.908264},{116.44279,39.90789},{116.442856,39.909138},{116.44248,39.911118},{116.44231,39.914455},{116.450516,39.91431},{116.45039,39.92676},{116.45032,39.92935},{116.449936,39.92961},{116.45005,39.931915},{116.45055,39.93193},{116.4505,39.93273},{116.45033,39.932808},{116.45035,39.939545},{116.44067,39.939644},{116.43233,39.93982},{116.42393,39.939903},{116.41523,39.939682},{116.40264,39.939804},{116.402885,39.934772},{116.399956,39.934727},{116.39972,39.935017},{116.399216,39.935024},{116.39802,39.935028},{116.39685,39.933025}});

        List<Feature<Polygon>> polygonList = new ArrayList<>();

        Polygon s100006 = Polygon.fromLngLats(new double[][]{{116.3805695,39.9132042},{116.3802261,39.9207573},{116.3797836,39.9299736},{116.3638153,39.9294243},{116.3645401,39.9330215},{116.3656235,39.9365196},{116.3670578,39.9399071},{116.3688278,39.9431686},{116.3709106,39.9462967},{116.373291,39.949276},{116.3759613,39.9520988},{116.3789063,39.9547462},{116.3848267,39.9550781},{116.3850403,39.9560318},{116.3850708,39.9567413},{116.3857193,39.9577751},{116.3858643,39.9596863},{116.3896942,39.9618111},{116.3911209,39.9618416},{116.3929291,39.9629402},{116.4010086,39.9634743},{116.4016342,39.9634514},{116.4020233,39.9556808},{116.4002457,39.9556274},{116.4004822,39.9470749},{116.4015045,39.9470024},{116.4023972,39.9464912},{116.4026566,39.9398003},{116.4028931,39.9347649},{116.3999557,39.9347229},{116.3997192,39.935009},{116.3980331,39.9350281},{116.3968582,39.933033},{116.3972015,39.9304085},{116.3960876,39.9293709},{116.3960648,39.9287949},{116.3959579,39.9287682},{116.3959427,39.9286118},{116.3947678,39.9287682},{116.394371,39.9287262},{116.3936005,39.9259834},{116.3936615,39.9241257},{116.3943863,39.9191284},{116.3928528,39.9162025},{116.39254,39.9135284},{116.3805695,39.9132042}});
        polygonList.add(Feature.fromGeometry(s100006, "100006"));

        Polygon s100011 = Polygon.fromLngLats(new double[][]{{116.4278107,39.879631},{116.4272079,39.8910065},{116.4260406,39.8931503},{116.4237213,39.8942528},{116.4219666,39.8945961},{116.4189682,39.8945351},{116.4183426,39.9072685},{116.4249496,39.9073715},{116.426033,39.9073906},{116.4264603,39.9076347},{116.4274139,39.907692},{116.4302521,39.9083138},{116.4382095,39.908287},{116.4427719,39.9078865},{116.4428253,39.9092674},{116.442482,39.9111214},{116.4423065,39.9144554},{116.4683685,39.9141197},{116.468071,39.8965607},{116.4664841,39.8950806},{116.4623413,39.8951378},{116.4623184,39.8958511},{116.4608383,39.8959007},{116.4605484,39.8958054},{116.4600296,39.8957825},{116.4597244,39.8957634},{116.4590988,39.8957901},{116.4585724,39.8958969},{116.4575043,39.8959007},{116.457489,39.8962936},{116.4568939,39.8962822},{116.4558563,39.8962593},{116.4553757,39.8962135},{116.4548035,39.8963013},{116.4546509,39.8965416},{116.4537201,39.8965836},{116.4533844,39.8967209},{116.4526215,39.8968811},{116.4524002,39.8969536},{116.4504547,39.8967972},{116.4522324,39.8858376},{116.4466019,39.8835449},{116.4406204,39.8817253},{116.4343414,39.8804092},{116.4278107,39.879631}});
        polygonList.add(Feature.fromGeometry(s100011, "100011"));

        PolygonMergeInformation mergeInformation = JTurfTools.mergeAllPolygon(centerPoint, radius, currPolygon, polygonList, 2000, 5000, true);

        System.out.println("所有区域总面积和：" + BigDecimal.valueOf(mergeInformation.getTotalArea() / 1000000).setScale(2, RoundingMode.HALF_UP).toString() + "平方公里");
        System.out.println("交集区域总面积和：" + BigDecimal.valueOf(mergeInformation.getInterArea() / 1000000).setScale(2, RoundingMode.HALF_UP).toString() + "平方公里");
        System.out.println("合并区域的总面积：" + BigDecimal.valueOf(mergeInformation.getUnionArea() / 1000000).setScale(2, RoundingMode.HALF_UP).toString() + "平方公里");
        System.out.println("空白区域的总面积：" + BigDecimal.valueOf((mergeInformation.getUnionArea() - (mergeInformation.getTotalArea() - mergeInformation.getInterArea())) / 1000000).setScale(2, RoundingMode.HALF_UP).toString() + "平方米");
        System.out.println("已被合并的ID：" + mergeInformation.getMergeIdList());
        System.out.println("未被合并的ID：" + mergeInformation.getRemainingIdList());

        StringBuilder buf = new StringBuilder();
        buf.append("[");
        for (Point point : mergeInformation.getUnionPolygon().coordinates().stream().flatMap(Collection::stream).collect(Collectors.toList())) {
            buf.append("{\"lng\":").append(point.longitude()).append(",\"lat\":").append(point.latitude()).append("}").append(",");
        }
        buf.delete(buf.length() - 1, buf.length());
        buf.append("]");
        System.out.println(buf.toString());
    }

}
